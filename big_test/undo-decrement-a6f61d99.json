{
  "schemaVersion": "2.0.0",
  "id": "a6f61d99-651c-4d4b-b211-6f6452a8c732",
  "title": "Undo Decrement",
  "status": "EDITABLE",
  "version": null,
  "previousVersion": null,
  "metadata": {
    "index": "0",
    "createdAt": "1970-01-01T00:00:00.000Z",
    "lastUpdatedAt": "1970-01-01T00:00:00.000Z",
    "createdByRoleId": "44444444-4444-4444-8888-444444444444",
    "lastUpdatedByRoleId": "44444444-4444-4444-8888-444444444444",
    "editors": [],
    "typeIndex": "0"
  },
  "sourceInfo": {
    "template": {
      "id": "4a3102b9-7295-4dfd-b36a-3e66e5f951db",
      "version": "2"
    }
  },
  "fields": {},
  "kind": "INSTANCE",
  "type": {
    "ref": {
      "id": "4eb6726b-c745-4cd0-bf1b-ef63ad35840b"
    }
  },
  "content": {
    "type": "SCRIPT_CODE",
    "value": {
      "scriptCode": "# Get the entity the script is embedded in (the MM List Item instance)\ncontaining_entity = seal.get_containing_entity()\n\n# Extract values from the containing entity's fields\nactual_amount_added_to_mm = containing_entity[\"fields\"].get(\"Actual Amount added to MM (uL)\", {}).get(\"value\")\nvolume_decremented_checkbox = containing_entity[\"fields\"].get(\"Volume decremented\", {}).get(\"value\")\nstock_unit_ref = containing_entity[\"fields\"].get(\"Stock Unit\", {}).get(\"value\")\n\n# --- Pre-condition check ---\n# Ensure the \"Volume decremented\" checkbox is ticked before proceeding\nif not volume_decremented_checkbox:\n    seal.throw_error(\"The 'Volume decremented' checkbox must be ticked to undo the decrement.\")\n\n# Ensure the actual amount is available\nif actual_amount_added_to_mm is None:\n    seal.throw_error(\"'Actual Amount added to MM (uL)' field is empty. Cannot undo decrement without a value.\")\n\n# Ensure the 'Stock Unit' reference is present\nif not stock_unit_ref or not isinstance(stock_unit_ref, list) or not stock_unit_ref[0].get(\"id\"):\n    seal.throw_error(\"No 'Stock Unit' is referenced. Cannot update remaining volume.\")\n\n# Get the referenced Stock Unit entity\nstock_unit_entity_id = stock_unit_ref[0][\"id\"]\nstock_unit_entity = seal.get_entity(entity_id=stock_unit_entity_id)\n\n# Extract the current remaining volume from the Stock Unit entity\ncurrent_remaining_volume = stock_unit_entity[\"fields\"].get(\"Remaining volume (uL)\", {}).get(\"value\")\n\n# Ensure the current remaining volume is a number (default to 0 if None)\nif current_remaining_volume is None:\n    current_remaining_volume = 0\nelif not isinstance(current_remaining_volume, (int, float)):\n    seal.throw_error(f\"Invalid value for 'Remaining volume (uL)' in Stock Unit '{stock_unit_entity['title']}'. Expected a number.\")\n\n# Calculate the new remaining volume by adding the decremented amount back\nnew_remaining_volume = current_remaining_volume + actual_amount_added_to_mm\n\n# Update the \"Remaining volume (uL)\" field in the Stock Unit entity\nseal.update_field_value_in_entity(\n    entity_id=stock_unit_entity_id,\n    field_name=\"Remaining volume (uL)\",\n    field_value=new_remaining_volume\n)\n\n# Untick the \"Volume decremented\" checkbox in the containing entity\nseal.update_field_value(\n    field_name=\"Volume decremented\",\n    field_value=False\n)\n\nprint(f\"Successfully added {actual_amount_added_to_mm} uL back to Stock Unit '{stock_unit_entity.get('title', stock_unit_entity_id)}'.\")\nprint(\"Updated 'Volume decremented' checkbox to unticked.\")"
    }
  }
}